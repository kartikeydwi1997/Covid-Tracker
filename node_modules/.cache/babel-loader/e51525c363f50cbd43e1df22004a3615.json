{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\Covid Tracker\\\\covid_tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchdailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    // alignItems:'center',\n    justifyContent: 'center',\n    // flexDirection:'column',\n    width: '75%',\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setdailyData] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setdailyData(await fetchdailyData()); // setdailyData(initialDailyData)\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length != 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: ' #36d4c1',\n        fill: 'true' // #3333ff\n\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: ' rgb(241, 89, 55)',\n        fill: 'true' // rgba(255,0,0,0.5)\n\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }) : null;\n  const barchart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['#36d4c1', 'rgba(0,255,0,0.5)', 'rgba(241, 89, 55,0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in  ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, country ? barchart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["F:/React/Covid Tracker/covid_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchdailyData","Line","Bar","makeStyles","StylesProvider","useStyles","theme","root","display","justifyContent","width","padding","spacing","Chart","data","confirmed","deaths","recovered","country","dailyData","setdailyData","classes","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barchart","value","legend","title","text"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {fetchdailyData}  from '../../API';\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\nroot:{\r\n    display:'flex',\r\n    // alignItems:'center',\r\n    justifyContent:'center',\r\n    // flexDirection:'column',\r\n    width:'75%',\r\n    padding:theme.spacing(4)\r\n}\r\n}))\r\nconst Chart=({data:{confirmed,deaths, recovered},country})=>{\r\n    const [dailyData,setdailyData]=useState([])\r\n    const classes = useStyles();\r\n    \r\n    \r\n    useEffect(()=>{\r\n     const fetchAPI=async()=>{\r\n        setdailyData(await fetchdailyData());\r\n        // setdailyData(initialDailyData)\r\n     }\r\n        fetchAPI()\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length!=0?\r\n        (<Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:' #36d4c1',\r\n                fill:'true'\r\n               \r\n                // #3333ff\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:' rgb(241, 89, 55)',\r\n                fill:'true'\r\n               \r\n                // rgba(255,0,0,0.5)\r\n            }\r\n        ]\r\n    }}\r\n        />):null\r\n    );\r\n    const barchart =(\r\n       confirmed?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['#36d4c1','rgba(0,255,0,0.5)','rgba(241, 89, 55,0.5)'],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current state in  ${country}`},\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n\r\n    return(\r\n       <div className={classes.root}>\r\n        {country?    barchart: lineChart}\r\n       </div>\r\n    )\r\n}\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}