{"version":3,"sources":["components/Cards/Cards.jsx","API/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","_cases","root","flexGrow","paddingTop","spacing","overflow","paper","padding","margin","boxShadow","image","width","height","marginTop","img","display","borderRadius","cases","Object","defineProperty","fontSize","Cards","_ref","_ref$data","data","confirmed","recovered","deaths","lastUpdate","classes","react_default","a","createElement","className","Grid","container","style","paddingLeft","paddingRight","item","xs","lg","Paper","backgroundColor","ButtonBase","alt","src","sm","direction","Typography","gutterBottom","variant","textAlign","color","fontWeight","build_default","start","end","value","duration","separator","alignItems","CalendarTodayOutlined_default","marginLeft","Date","toDateString","url","fetchdata","asyncToGenerator","regenerator_default","mark","_callee","country","changeableUrl","_yield$axios$get","_yield$axios$get$data","wrap","_context","prev","next","concat","axios","get","sent","abrupt","t0","console","log","stop","_x","apply","this","arguments","fetchdailyData","_ref2","_callee2","_yield$axios$get2","modifiedData","_context2","map","dailyData","total","date","reportDate","fetchcountries","_ref3","_callee3","_yield$axios$get3","countries","_context3","name","justifyContent","Chart","_useState","useState","_useState2","slicedToArray","setdailyData","useEffect","t1","fetchAPI","lineChart","length","es","labels","datasets","_ref4","label","borderColor","fill","_ref5","barchart","options","legend","title","text","list","choose","CountryPicker","handleCountryChange","countrydata","setcountrydata","fetchCountriesAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","_React$useState","React","_React$useState2","setdata","_React$useState3","_React$useState4","setcountry","_getdata","getdata","components_Cards_Cards","components_CountryPicker_CountryPicker","components_Chart_Chart","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.092681b5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport CountUp from 'react-countup';\r\nimport CalendarTodayOutlinedIcon from '@material-ui/icons/CalendarTodayOutlined';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // display:'flex',\r\n    // alignItems:'center',\r\n    // justifyContent:'column',\r\n    paddingTop:theme.spacing(2),\r\n    overflow:\"hidden\"\r\n  },\r\n  // paper: {\r\n  //   padding: theme.spacing(2),\r\n  //   textAlign: 'center',\r\n  //   color: theme.palette.text.secondary,\r\n  // },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    // maxWidth: 500,\r\n    boxShadow: \"0px 0px 0px 0px #ffffff!important\"\r\n  },\r\n  image: {\r\n    width: 125,\r\n    height: 120,\r\n    marginTop:\"12px\"\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    // maxWidth: '100%',\r\n    // maxHeight: '100%',\r\n    width: 120,\r\n    // marginTop:\"15px\",\r\n    height: 110,\r\n    borderRadius:'8%'\r\n  },\r\n  cases:{\r\n    ['@media (max-width:400px)']:{fontSize:\"22px!important\"},\r\n    ['@media (max-width:350px)']:{fontSize:\"22px!important\"},\r\n  }\r\n}));\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate }}) => {\r\n  const classes = useStyles();\r\n  // const confirmed=props\r\n  if(!confirmed){\r\n    return 'Loading..'\r\n  }\r\n  // console.log(confirmed)\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n     <Grid container  spacing={3} \r\n     style={{paddingLeft:\"15px\",paddingRight:\"13px\"}}\r\n     >\r\n\r\n{/* md={4} sm={12} xl={4}style={{boxShadow: '0px 0px 0px 5px #000'}} */}\r\n        <Grid item xs={12}  lg={4}  >\r\n          <Paper className={classes.paper} style={{backgroundColor:\"#36d4c1\",borderRadius:\"5%\"}}>\r\n            <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"images/infected.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={6} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={1}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"h4\" className={classes.cases} style={{textAlign:\"left\",marginTop:\"12px\",color:\" #061c94\",fontWeight:700}}>\r\n                  Infected\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom  style={{textAlign:\"left\"}}>\r\n               <CountUp start={0} end={confirmed.value}  style={{fontWeight:800}} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\"}}>\r\n                  <div style={{  display: 'flex', color:'#000',\r\n                    alignItems: 'center '}}>\r\n                <CalendarTodayOutlinedIcon/><div style={{marginLeft:'10px',fontWeight:700}}>{new Date(lastUpdate).toDateString()}</div></div>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\",color:\"#000\",fontWeight:700}}>\r\n                Number of active cases\r\n                </Typography>\r\n              </Grid>\r\n             \r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* rgb(45, 218, 34) */}\r\n\r\n        \r\n        <Grid item xs={12}  lg={4}  >\r\n        <Paper className={classes.paper} style={{backgroundColor:\"rgb(45, 218, 34)\",borderRadius:\"5%\"}}>\r\n            <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"images/recovered.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={6} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={1}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"h4\" className={classes.cases}  style={{textAlign:\"left\",marginTop:\"12px\",color:\"rgb(6, 107, 19)\",fontWeight:700}}>\r\n                  Recovered\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom style={{textAlign:\"left\"}}>\r\n                <CountUp start={0} end={recovered.value} style={{fontWeight:800}} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\"}}>\r\n                <div style={{  display: 'flex', color:'#000',\r\n                    alignItems: 'center '}}>\r\n                <CalendarTodayOutlinedIcon/>  <div style={{marginLeft:'10px',fontWeight:700}}>{new Date(lastUpdate).toDateString()}</div></div>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\",color:\"#000\",fontWeight:700}}>\r\n                Number of recovered cases\r\n                </Typography>\r\n              </Grid>\r\n             \r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n          </Paper>\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12} lg={4}>\r\n         <Paper className={classes.paper} style={{backgroundColor:\"rgb(241, 89, 55)\",borderRadius:\"5%\"}}>\r\n            <Grid container spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src=\"images/death.jpg\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={6} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={1 }>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"h4\" className={classes.cases}  style={{textAlign:\"left\",marginTop:\"12px\",color:\" rgb(148, 6, 6)\",fontWeight:700}}>\r\n                  Deaths\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom style={{textAlign:\"left\"}}>\r\n                <CountUp start={0} end={deaths.value}  style={{fontWeight:800}} duration={2.5} separator=\",\"/>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\"}}>\r\n                <div style={{  display: 'flex', color:'#000',\r\n                    alignItems: 'center '}}>\r\n                <CalendarTodayOutlinedIcon/>  <div style={{marginLeft:'10px',fontWeight:700}}>    {new Date(lastUpdate).toDateString()}</div></div>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" style={{textAlign:\"left\",color:\"#000\",fontWeight:700}}>\r\n                Number of death caused\r\n                </Typography>\r\n              </Grid>\r\n             \r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    \r\n    \r\n    </div>\r\n  )\r\n}\r\nexport default Cards;","import axios from 'axios'\r\n\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchdata= async(country)=>{\r\n    let changeableUrl=url;\r\n\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\ntry{\r\n    const {data:{confirmed,recovered,deaths,lastUpdate }}=await axios.get(changeableUrl);\r\n\r\n    return { confirmed,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate};\r\n \r\n}\r\ncatch(error){\r\nconsole.log(error)\r\n}\r\n}\r\nexport const fetchdailyData=async()=>{\r\n    try{\r\n        const {data}=await axios.get(`${url}/daily`);\r\n       const modifiedData=data.map((dailyData)=>({\r\n        confirmed:dailyData.confirmed.total,\r\n        deaths:dailyData.deaths.total,\r\n        date:dailyData.reportDate\r\n       }))\r\n       return modifiedData;\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\nexport const fetchcountries=async()=>{\r\ntry{\r\n    const {data:{countries}}=await axios.get(`${url}/countries`);\r\n    console.log(countries)\r\n    return countries.map((country)=>country.name);\r\n}\r\ncatch(error){\r\n    console.log(error)\r\n}\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {fetchdailyData}  from '../../API';\r\nimport {Line,Bar} from 'react-chartjs-2'\r\nimport { makeStyles, StylesProvider } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\nroot:{\r\n    display:'flex',\r\n    // alignItems:'center',\r\n    justifyContent:'center',\r\n    // flexDirection:'column',\r\n    width:'90%',\r\n    marginTop:\"10px\",\r\n    padding:theme.spacing(2)\r\n}\r\n}))\r\nconst Chart=({data:{confirmed,deaths, recovered},country})=>{\r\n    const [dailyData,setdailyData]=useState([])\r\n    const classes = useStyles();\r\n    \r\n    \r\n    useEffect(()=>{\r\n     const fetchAPI=async()=>{\r\n        setdailyData(await fetchdailyData());\r\n        // setdailyData(initialDailyData)\r\n     }\r\n        fetchAPI()\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length!=0?\r\n        (<Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:' #36d4c1',\r\n                fill:'true'\r\n               \r\n                // #3333ff\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:' rgb(241, 89, 55)',\r\n                fill:'true'\r\n               \r\n                // rgba(255,0,0,0.5)\r\n            }\r\n        ]\r\n    }}\r\n        />):null\r\n    );\r\n    const barchart =(\r\n       confirmed?(\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['#36d4c1','rgba(45, 218, 34,0.8)','rgba(241, 89, 55,0.8)'],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current state in  ${country}`},\r\n            }}\r\n            />\r\n        ):null\r\n    );\r\n\r\n    return(\r\n       <div className={classes.root}>\r\n        {country?    barchart: lineChart}\r\n       </div>\r\n    )\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl, Grid,Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {fetchcountries} from '../../API'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n    //    width:'30%',\r\n       marginTop:\"50px\",\r\n     \r\n        // padding:\"40px 0px\"\r\n    },\r\n    list:{\r\n        display:\"flex\",\r\n        alignItems:'center'\r\n    },\r\n    choose:{\r\n        ['@media (max-width:350px)']:{fontSize:\"15px!important\",width:\"200px!important\"},\r\n    }\r\n}))\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\n    const classes = useStyles();\r\n    const [countrydata,setcountrydata]=useState([])\r\n \r\n    useEffect(()=>{\r\n        const fetchCountriesAPI=async()=>{\r\n            setcountrydata(await fetchcountries());\r\n        }\r\n        fetchCountriesAPI()\r\n       },[])\r\n       console.log(countrydata)\r\n    return(\r\n     <div  className={classes.root}>\r\n     <Grid container>\r\n         <Grid item xs={5} >\r\n             <Typography className={classes.choose} style={{textAlign:'left',marginTop:'5px',marginLeft:'15px'}}>Choose Country:</Typography>\r\n         </Grid>\r\n         <Grid item xs={6}>\r\n        <FormControl label =\"outlined\" >\r\n            {/* <div className={classes.list}> */}\r\n        {/* <p style={{marginRight:\"15px\"}}>Choose Country:</p> */}\r\n                <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                    <option value=\"\">Global</option>\r\n                    {countrydata.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n                </NativeSelect>\r\n                {/* </div> */}\r\n        </FormControl>  \r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPicker;","import React, { useEffect } from 'react';\n\nimport './App.css';\nimport {Cards,Chart,CountryPicker} from './components';\nimport {fetchdata}  from './API';\n\nfunction App() {\n  const [data,setdata]=React.useState([])\n  const [country,setcountry]=React.useState()\n  // const confirmed\nuseEffect(()=>{\n  async function getdata(){\n    const getdata=await fetchdata();\n    setdata(getdata)\n    console.log(getdata)\n  }\n\n  getdata();\n},[])\n\nconst  handleCountryChange=async(country)=>{\n  const getdata=await fetchdata(country );\n  setdata(getdata)\n  setcountry(country)\n  console.log(getdata)\n    }\n  \n  return (\n    <div >\n    {/* {data} */}\n    <div className=\"containercountry\" style={{marginTop:\"30px\"}}>\n    <img src=\"Images/covid_logo.png\" alt=\"Covid-19\" className=\"image\"/></div>\n      <Cards data={data} className=\"containercard\"/>\n      <div className=\"containercountry\">\n       <CountryPicker handleCountryChange={handleCountryChange} /></div>\n   \n       <div className=\"containercountry\"> <Chart data={data} country={country}/></div>\n     \n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}